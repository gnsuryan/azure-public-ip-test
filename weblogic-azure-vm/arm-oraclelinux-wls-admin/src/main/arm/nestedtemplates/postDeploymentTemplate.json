{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
		"location": {
		   "type": "string",
		   "metadata": {
		      "description": "Location for all resources."
		   }
		},
		"_globalResourceNameSuffix": {
		   "type": "string",
		   "metadata": {
		      "description": "A unique suffix that was specified during the deployment of the solution template."
		   }
		},
		"utcValue": {
		    "type": "string",
		    "defaultValue": "[utcNow()]"
		},
		"adminVMName": {
		   "type": "string",
		   "defaultValue": "adminVM",
		   "metadata": {
		      "description": "Admin Server hosting VM name."
		   }
		},
		"tagsByResource": {
		    "type": "object",
		    "defaultValue": {},
		    "metadata": {
		        "description": "${label.tagsLabel}"
		    }
		},
		"const_guidTag" :{
			"type": "string",
			"metadata": {
			   "description": "A unique tag for resources."
			}
		},
		"_artifactsLocation": {
		   "type": "string",
		   "metadata": {
		      "description": "The base URI where artifacts required by this template are located. When the template is deployed using the accompanying scripts, a private location in the subscription will be used and this value will be automatically generated."
		   }
		},
		"_artifactsLocationAdminTemplate": {
		   "defaultValue": "[if(contains(parameters('_artifactsLocation'), 'githubusercontent'), parameters('_artifactsLocation'), deployment().properties.templateLink.uri)]",
		   "type": "string",
		   "metadata": {
		      "description": "If we are deploying from the command line, use the passed in _artifactsLocation, otherwise use the default."
		   }
		},
		"_artifactsLocationSasToken": {
		   "type": "securestring",
		   "metadata": {
		      "description": "The sasToken required to access _artifactsLocation.  When the template is deployed using the accompanying scripts, a sasToken will be automatically generated. Use the defaultValue if the staging location is not secured."
		   }
		}
    },
    "variables": {
		"const_roleDefinitionIdOfContributor": "b24988ac-6180-42a0-ab88-20f7382dd24c",
		"name_roleAssignmentName": "[guid(format('{0}{1}Role assignment in resource group scope', subscription().id, parameters('utcValue')))]",
		"name_postDeploymentScriptUserDefinedManagedIdentity": "[concat('post-deployment-user-defined-managed-identity', parameters('_globalResourceNameSuffix'))]",
		"name_postDeploymentscriptFile": "postDeploymentScript.sh"
    },
    "resources": [
		{
		    "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
		    "apiVersion": "${azure.apiVersionForIdentity}",
		    "tags": "[parameters('tagsByResource')['${identifier.userAssignedIdentities}']]",
		    "name": "[variables('name_postDeploymentScriptUserDefinedManagedIdentity')]",
		    "location": "[parameters('location')]"
		},
		{
		    "type": "Microsoft.Authorization/roleAssignments",
		    "apiVersion": "${azure.apiVersionForRoleAssignment}",
		    "name": "[variables('name_roleAssignmentName')]",
		    "dependsOn": [
		        "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('name_postDeploymentScriptUserDefinedManagedIdentity'))]"
		    ],
		    "properties": {
		        "description": "Assign subscription scope role to User Assigned Managed Identity ",
		        "principalId": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities',variables('name_postDeploymentScriptUserDefinedManagedIdentity'))).principalId]",
		        "principalType": "ServicePrincipal",
		        "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', variables('const_roleDefinitionIdOfContributor'))]",
				"scope": "[subscription().id]"
		    }
		},
		{
		    "type": "Microsoft.Resources/deploymentScripts",
		    "apiVersion": "${azure.apiVersionForDeploymentScript}",
			"tags": "[parameters('tagsByResource')['${identifier.deploymentScripts}']]",
			"name": "[concat('postdeployscript-', parameters('_globalResourceNameSuffix'))]",
			"dependsOn": [
				"[resourceId('Microsoft.Authorization/roleAssignments', variables('name_roleAssignmentName'))]"
			 ],
			"kind": "AzureCLI",
			"location": "[parameters('location')]",
			"identity": {
			    "type": "UserAssigned",
			    "userAssignedIdentities": {
			        "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('name_postDeploymentScriptUserDefinedManagedIdentity'))]": {}
			    }
			},
			"properties": {
				"forceUpdateTag": "[parameters('utcValue')]",
				"azCliVersion": "2.9.1",
				"timeout": "PT30M",
				"cleanupPreference": "OnSuccess",
				"retentionInterval": "P1D",
				"primaryScriptUri": "[uri(parameters('_artifactsLocationAdminTemplate'), concat('../scripts/', variables('name_postDeploymentscriptFile'), parameters('_artifactsLocationSasToken')))]",
				"environmentVariables": [
					{
					    "name": "MANAGED_IDENTITY_ID",
					    "value": "[variables('name_postDeploymentScriptUserDefinedManagedIdentity')]"
					},
					{
					    "name": "RESOURCE_GROUP_NAME",
					    "value": "[resourceGroup().name]"
					},
					{
						"name": "GUID_TAG",
						"value": "[parameters('const_guidTag')]"
					}
				]
			}
		}
    ],
    "outputs": {
    }
}
